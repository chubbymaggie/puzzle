/*
 * generated by Xtext
 */
grammar InternalMutivar;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.inria.diverse.puzzle.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.inria.diverse.puzzle.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.inria.diverse.puzzle.services.MutivarGrammarAccess;

}

@parser::members {

 	private MutivarGrammarAccess grammarAccess;
 	
    public InternalMutivarParser(TokenStream input, MutivarGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LanguageProductLine";	
   	}
   	
   	@Override
   	protected MutivarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLanguageProductLine
entryRuleLanguageProductLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageProductLineRule()); }
	 iv_ruleLanguageProductLine=ruleLanguageProductLine 
	 { $current=$iv_ruleLanguageProductLine.current; } 
	 EOF 
;

// Rule LanguageProductLine
ruleLanguageProductLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLanguageProductLineAccess().getLanguageProductLineAction_0(),
            $current);
    }
)(	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageProductLineAccess().getImportKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageProductLineAccess().getImplementationFileEStringParserRuleCall_1_1_0()); 
	    }
		lv_implementationFile_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageProductLineRule());
	        }
       		set(
       			$current, 
       			"implementationFile",
        		lv_implementationFile_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_3='languagefeatures' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLanguageProductLineAccess().getLanguagefeaturesKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageProductLineAccess().getProductLineVariabilityProductLineVariabilityParserRuleCall_2_1_0()); 
	    }
		lv_productLineVariability_4_0=ruleProductLineVariability		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageProductLineRule());
	        }
       		set(
       			$current, 
       			"productLineVariability",
        		lv_productLineVariability_4_0, 
        		"ProductLineVariability");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='orthogonalvariability' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLanguageProductLineAccess().getOrthogonalvariabilityKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageProductLineAccess().getLanguageVariabilityLanguageVariabilityParserRuleCall_3_1_0()); 
	    }
		lv_languageVariability_6_0=ruleLanguageVariability		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageProductLineRule());
	        }
       		set(
       			$current, 
       			"languageVariability",
        		lv_languageVariability_6_0, 
        		"LanguageVariability");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getMandatoryChildParserRuleCall_0()); 
    }
    this_MandatoryChild_0=ruleMandatoryChild
    { 
        $current = $this_MandatoryChild_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getOptionalChildParserRuleCall_1()); 
    }
    this_OptionalChild_1=ruleOptionalChild
    { 
        $current = $this_OptionalChild_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getOrGroupChildParserRuleCall_2()); 
    }
    this_OrGroupChild_2=ruleOrGroupChild
    { 
        $current = $this_OrGroupChild_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getAlternativeGroupParserRuleCall_3()); 
    }
    this_AlternativeGroup_3=ruleAlternativeGroup
    { 
        $current = $this_AlternativeGroup_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleProductLineVariability
entryRuleProductLineVariability returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProductLineVariabilityRule()); }
	 iv_ruleProductLineVariability=ruleProductLineVariability 
	 { $current=$iv_ruleProductLineVariability.current; } 
	 EOF 
;

// Rule ProductLineVariability
ruleProductLineVariability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProductLineVariabilityAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_1_0()); 
	    }
		lv_features_1_0=ruleLanguageFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProductLineVariabilityRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_1_0, 
        		"LanguageFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_2_0()); 
	    }
		lv_features_2_0=ruleLanguageFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProductLineVariabilityRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_2_0, 
        		"LanguageFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='root' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProductLineVariabilityAccess().getRootKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProductLineVariabilityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProductLineVariabilityAccess().getRootFeatureLanguageFeatureCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProductLineVariabilityAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLanguageVariability
entryRuleLanguageVariability returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageVariabilityRule()); }
	 iv_ruleLanguageVariability=ruleLanguageVariability 
	 { $current=$iv_ruleLanguageVariability.current; } 
	 EOF 
;

// Rule LanguageVariability
ruleLanguageVariability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLanguageVariabilityAccess().getLanguageVariabilityAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageVariabilityAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_0_0()); 
	    }
		lv_variabilityPoints_2_0=ruleVariabilityPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageVariabilityRule());
	        }
       		add(
       			$current, 
       			"variabilityPoints",
        		lv_variabilityPoints_2_0, 
        		"VariabilityPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_1_0()); 
	    }
		lv_variabilityPoints_3_0=ruleVariabilityPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageVariabilityRule());
	        }
       		add(
       			$current, 
       			"variabilityPoints",
        		lv_variabilityPoints_3_0, 
        		"VariabilityPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLanguageVariabilityAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleLanguageFeature
entryRuleLanguageFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageFeatureRule()); }
	 iv_ruleLanguageFeature=ruleLanguageFeature 
	 { $current=$iv_ruleLanguageFeature.current; } 
	 EOF 
;

// Rule LanguageFeature
ruleLanguageFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLanguageFeatureAccess().getLanguageFeatureAction_0(),
            $current);
    }
)(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getLanguageFeatureAccess().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageFeatureRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_2='languagefeature' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLanguageFeatureAccess().getLanguagefeatureKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageFeatureRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='requires' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLanguageFeatureAccess().getRequiresKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLanguageFeatureAccess().getCommaKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_8='excludes' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLanguageFeatureAccess().getExcludesKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLanguageFeatureAccess().getCommaKeyword_5_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageFeatureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_6());
    }
(	otherlv_13='languagemodule' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLanguageFeatureAccess().getLanguagemoduleKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getModuleEStringParserRuleCall_7_1_0()); 
	    }
		lv_module_14_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageFeatureRule());
	        }
       		set(
       			$current, 
       			"module",
        		lv_module_14_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='children' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLanguageFeatureAccess().getChildrenKeyword_8_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_2_0()); 
	    }
		lv_children_17_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageFeatureRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_17_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_3_0()); 
	    }
		lv_children_18_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageFeatureRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_18_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_8_4());
    }
)?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_9());
    }
)
;







// Entry rule entryRuleMandatoryChild
entryRuleMandatoryChild returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMandatoryChildRule()); }
	 iv_ruleMandatoryChild=ruleMandatoryChild 
	 { $current=$iv_ruleMandatoryChild.current; } 
	 EOF 
;

// Rule MandatoryChild
ruleMandatoryChild returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mandatory' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMandatoryChildAccess().getMandatoryKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMandatoryChildRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMandatoryChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOptionalChild
entryRuleOptionalChild returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionalChildRule()); }
	 iv_ruleOptionalChild=ruleOptionalChild 
	 { $current=$iv_ruleOptionalChild.current; } 
	 EOF 
;

// Rule OptionalChild
ruleOptionalChild returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='optional' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOptionalChildAccess().getOptionalKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalChildRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOptionalChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOrGroupChild
entryRuleOrGroupChild returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrGroupChildRule()); }
	 iv_ruleOrGroupChild=ruleOrGroupChild 
	 { $current=$iv_ruleOrGroupChild.current; } 
	 EOF 
;

// Rule OrGroupChild
ruleOrGroupChild returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='or' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrGroupChildAccess().getOrKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrGroupChildAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrGroupChildRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrGroupChildAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrGroupChildRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrGroupChildAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleAlternativeGroup
entryRuleAlternativeGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeGroupRule()); }
	 iv_ruleAlternativeGroup=ruleAlternativeGroup 
	 { $current=$iv_ruleAlternativeGroup.current; } 
	 EOF 
;

// Rule AlternativeGroup
ruleAlternativeGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='alternative' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlternativeGroupAccess().getAlternativeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlternativeGroupAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlternativeGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAlternativeGroupAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlternativeGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAlternativeGroupAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleVariabilityPoint
entryRuleVariabilityPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariabilityPointRule()); }
	 iv_ruleVariabilityPoint=ruleVariabilityPoint 
	 { $current=$iv_ruleVariabilityPoint.current; } 
	 EOF 
;

// Rule VariabilityPoint
ruleVariabilityPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='variationpoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariabilityPointAccess().getVariationpointKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariabilityPointAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariabilityPointRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='involves' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariabilityPointAccess().getInvolvesKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariabilityPointRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariabilityPointAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariabilityPointRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariabilityPointAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_4_0()); 
	    }
		lv_variations_7_0=ruleVariation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariabilityPointRule());
	        }
       		add(
       			$current, 
       			"variations",
        		lv_variations_7_0, 
        		"Variation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_5_0()); 
	    }
		lv_variations_8_0=ruleVariation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariabilityPointRule());
	        }
       		add(
       			$current, 
       			"variations",
        		lv_variations_8_0, 
        		"Variation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVariabilityPointAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleVariation
entryRuleVariation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariationRule()); }
	 iv_ruleVariation=ruleVariation 
	 { $current=$iv_ruleVariation.current; } 
	 EOF 
;

// Rule Variation
ruleVariation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariationAccess().getVariationAction_0(),
            $current);
    }
)(
(
		lv_default_1_0=	'default' 
    {
        newLeafNode(lv_default_1_0, grammarAccess.getVariationAccess().getDefaultDefaultKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariationRule());
	        }
       		setWithLastConsumed($current, "default", true, "default");
	    }

)
)?	otherlv_2='variation' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariationAccess().getVariationKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariationAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='languagemodule' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariationAccess().getLanguagemoduleKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariationAccess().getModuleEStringParserRuleCall_4_1_0()); 
	    }
		lv_module_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariationRule());
	        }
       		set(
       			$current, 
       			"module",
        		lv_module_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


