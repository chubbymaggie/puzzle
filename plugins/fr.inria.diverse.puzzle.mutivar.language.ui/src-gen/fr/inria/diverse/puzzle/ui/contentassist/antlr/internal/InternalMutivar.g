/*
 * generated by Xtext
 */
grammar InternalMutivar;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.diverse.puzzle.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.puzzle.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.puzzle.services.MutivarGrammarAccess;

}

@parser::members {
 
 	private MutivarGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MutivarGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLanguageProductLine
entryRuleLanguageProductLine 
:
{ before(grammarAccess.getLanguageProductLineRule()); }
	 ruleLanguageProductLine
{ after(grammarAccess.getLanguageProductLineRule()); } 
	 EOF 
;

// Rule LanguageProductLine
ruleLanguageProductLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageProductLineAccess().getGroup()); }
(rule__LanguageProductLine__Group__0)
{ after(grammarAccess.getLanguageProductLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getAlternatives()); }
(rule__Relation__Alternatives)
{ after(grammarAccess.getRelationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProductLineVariability
entryRuleProductLineVariability 
:
{ before(grammarAccess.getProductLineVariabilityRule()); }
	 ruleProductLineVariability
{ after(grammarAccess.getProductLineVariabilityRule()); } 
	 EOF 
;

// Rule ProductLineVariability
ruleProductLineVariability
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getGroup()); }
(rule__ProductLineVariability__Group__0)
{ after(grammarAccess.getProductLineVariabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLanguageVariability
entryRuleLanguageVariability 
:
{ before(grammarAccess.getLanguageVariabilityRule()); }
	 ruleLanguageVariability
{ after(grammarAccess.getLanguageVariabilityRule()); } 
	 EOF 
;

// Rule LanguageVariability
ruleLanguageVariability
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getGroup()); }
(rule__LanguageVariability__Group__0)
{ after(grammarAccess.getLanguageVariabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLanguageFeature
entryRuleLanguageFeature 
:
{ before(grammarAccess.getLanguageFeatureRule()); }
	 ruleLanguageFeature
{ after(grammarAccess.getLanguageFeatureRule()); } 
	 EOF 
;

// Rule LanguageFeature
ruleLanguageFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup()); }
(rule__LanguageFeature__Group__0)
{ after(grammarAccess.getLanguageFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMandatoryChild
entryRuleMandatoryChild 
:
{ before(grammarAccess.getMandatoryChildRule()); }
	 ruleMandatoryChild
{ after(grammarAccess.getMandatoryChildRule()); } 
	 EOF 
;

// Rule MandatoryChild
ruleMandatoryChild
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryChildAccess().getGroup()); }
(rule__MandatoryChild__Group__0)
{ after(grammarAccess.getMandatoryChildAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalChild
entryRuleOptionalChild 
:
{ before(grammarAccess.getOptionalChildRule()); }
	 ruleOptionalChild
{ after(grammarAccess.getOptionalChildRule()); } 
	 EOF 
;

// Rule OptionalChild
ruleOptionalChild
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalChildAccess().getGroup()); }
(rule__OptionalChild__Group__0)
{ after(grammarAccess.getOptionalChildAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrGroupChild
entryRuleOrGroupChild 
:
{ before(grammarAccess.getOrGroupChildRule()); }
	 ruleOrGroupChild
{ after(grammarAccess.getOrGroupChildRule()); } 
	 EOF 
;

// Rule OrGroupChild
ruleOrGroupChild
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrGroupChildAccess().getGroup()); }
(rule__OrGroupChild__Group__0)
{ after(grammarAccess.getOrGroupChildAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternativeGroup
entryRuleAlternativeGroup 
:
{ before(grammarAccess.getAlternativeGroupRule()); }
	 ruleAlternativeGroup
{ after(grammarAccess.getAlternativeGroupRule()); } 
	 EOF 
;

// Rule AlternativeGroup
ruleAlternativeGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativeGroupAccess().getGroup()); }
(rule__AlternativeGroup__Group__0)
{ after(grammarAccess.getAlternativeGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariabilityPoint
entryRuleVariabilityPoint 
:
{ before(grammarAccess.getVariabilityPointRule()); }
	 ruleVariabilityPoint
{ after(grammarAccess.getVariabilityPointRule()); } 
	 EOF 
;

// Rule VariabilityPoint
ruleVariabilityPoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariabilityPointAccess().getGroup()); }
(rule__VariabilityPoint__Group__0)
{ after(grammarAccess.getVariabilityPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariation
entryRuleVariation 
:
{ before(grammarAccess.getVariationRule()); }
	 ruleVariation
{ after(grammarAccess.getVariationRule()); } 
	 EOF 
;

// Rule Variation
ruleVariation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariationAccess().getGroup()); }
(rule__Variation__Group__0)
{ after(grammarAccess.getVariationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Relation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getMandatoryChildParserRuleCall_0()); }
	ruleMandatoryChild
{ after(grammarAccess.getRelationAccess().getMandatoryChildParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOptionalChildParserRuleCall_1()); }
	ruleOptionalChild
{ after(grammarAccess.getRelationAccess().getOptionalChildParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOrGroupChildParserRuleCall_2()); }
	ruleOrGroupChild
{ after(grammarAccess.getRelationAccess().getOrGroupChildParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getAlternativeGroupParserRuleCall_3()); }
	ruleAlternativeGroup
{ after(grammarAccess.getRelationAccess().getAlternativeGroupParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LanguageProductLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group__0__Impl
	rule__LanguageProductLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getLanguageProductLineAction_0()); }
(

)
{ after(grammarAccess.getLanguageProductLineAccess().getLanguageProductLineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group__1__Impl
	rule__LanguageProductLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getGroup_1()); }
(rule__LanguageProductLine__Group_1__0)?
{ after(grammarAccess.getLanguageProductLineAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group__2__Impl
	rule__LanguageProductLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getGroup_2()); }
(rule__LanguageProductLine__Group_2__0)?
{ after(grammarAccess.getLanguageProductLineAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getGroup_3()); }
(rule__LanguageProductLine__Group_3__0)?
{ after(grammarAccess.getLanguageProductLineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LanguageProductLine__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_1__0__Impl
	rule__LanguageProductLine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getImportKeyword_1_0()); }

	'import' 

{ after(grammarAccess.getLanguageProductLineAccess().getImportKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getImplementationFileAssignment_1_1()); }
(rule__LanguageProductLine__ImplementationFileAssignment_1_1)
{ after(grammarAccess.getLanguageProductLineAccess().getImplementationFileAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageProductLine__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_2__0__Impl
	rule__LanguageProductLine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getLanguagefeaturesKeyword_2_0()); }

	'languagefeatures' 

{ after(grammarAccess.getLanguageProductLineAccess().getLanguagefeaturesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getProductLineVariabilityAssignment_2_1()); }
(rule__LanguageProductLine__ProductLineVariabilityAssignment_2_1)
{ after(grammarAccess.getLanguageProductLineAccess().getProductLineVariabilityAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageProductLine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_3__0__Impl
	rule__LanguageProductLine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getOrthogonalvariabilityKeyword_3_0()); }

	'orthogonalvariability' 

{ after(grammarAccess.getLanguageProductLineAccess().getOrthogonalvariabilityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageProductLine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageProductLine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getLanguageVariabilityAssignment_3_1()); }
(rule__LanguageProductLine__LanguageVariabilityAssignment_3_1)
{ after(grammarAccess.getLanguageProductLineAccess().getLanguageVariabilityAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProductLineVariability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__0__Impl
	rule__ProductLineVariability__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getProductLineVariabilityAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLineVariability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__1__Impl
	rule__ProductLineVariability__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getFeaturesAssignment_1()); }
(rule__ProductLineVariability__FeaturesAssignment_1)
{ after(grammarAccess.getProductLineVariabilityAccess().getFeaturesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLineVariability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__2__Impl
	rule__ProductLineVariability__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getFeaturesAssignment_2()); }
(rule__ProductLineVariability__FeaturesAssignment_2)*
{ after(grammarAccess.getProductLineVariabilityAccess().getFeaturesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLineVariability__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__3__Impl
	rule__ProductLineVariability__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getRootKeyword_3()); }

	'root' 

{ after(grammarAccess.getProductLineVariabilityAccess().getRootKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLineVariability__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__4__Impl
	rule__ProductLineVariability__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getRootFeatureAssignment_4()); }
(rule__ProductLineVariability__RootFeatureAssignment_4)
{ after(grammarAccess.getProductLineVariabilityAccess().getRootFeatureAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLineVariability__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLineVariability__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getProductLineVariabilityAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LanguageVariability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group__0__Impl
	rule__LanguageVariability__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getLanguageVariabilityAction_0()); }
(

)
{ after(grammarAccess.getLanguageVariabilityAccess().getLanguageVariabilityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageVariability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group__1__Impl
	rule__LanguageVariability__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getLanguageVariabilityAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageVariability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group__2__Impl
	rule__LanguageVariability__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getGroup_2()); }
(rule__LanguageVariability__Group_2__0)?
{ after(grammarAccess.getLanguageVariabilityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageVariability__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getLanguageVariabilityAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LanguageVariability__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group_2__0__Impl
	rule__LanguageVariability__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsAssignment_2_0()); }
(rule__LanguageVariability__VariabilityPointsAssignment_2_0)
{ after(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageVariability__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageVariability__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsAssignment_2_1()); }
(rule__LanguageVariability__VariabilityPointsAssignment_2_1)*
{ after(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__0__Impl
	rule__LanguageFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getLanguageFeatureAction_0()); }
(

)
{ after(grammarAccess.getLanguageFeatureAccess().getLanguageFeatureAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__1__Impl
	rule__LanguageFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getAbstractAssignment_1()); }
(rule__LanguageFeature__AbstractAssignment_1)?
{ after(grammarAccess.getLanguageFeatureAccess().getAbstractAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__2__Impl
	rule__LanguageFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getLanguagefeatureKeyword_2()); }

	'languagefeature' 

{ after(grammarAccess.getLanguageFeatureAccess().getLanguagefeatureKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__3__Impl
	rule__LanguageFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getNameAssignment_3()); }
(rule__LanguageFeature__NameAssignment_3)
{ after(grammarAccess.getLanguageFeatureAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__4__Impl
	rule__LanguageFeature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_4()); }
(rule__LanguageFeature__Group_4__0)?
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__5__Impl
	rule__LanguageFeature__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_5()); }
(rule__LanguageFeature__Group_5__0)?
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__6__Impl
	rule__LanguageFeature__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__7__Impl
	rule__LanguageFeature__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_7()); }
(rule__LanguageFeature__Group_7__0)?
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__8__Impl
	rule__LanguageFeature__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_8()); }
(rule__LanguageFeature__Group_8__0)?
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__LanguageFeature__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_4__0__Impl
	rule__LanguageFeature__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getRequiresKeyword_4_0()); }

	'requires' 

{ after(grammarAccess.getLanguageFeatureAccess().getRequiresKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_4__1__Impl
	rule__LanguageFeature__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsAssignment_4_1()); }
(rule__LanguageFeature__DependsAssignment_4_1)
{ after(grammarAccess.getLanguageFeatureAccess().getDependsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_4_2()); }
(rule__LanguageFeature__Group_4_2__0)*
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LanguageFeature__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_4_2__0__Impl
	rule__LanguageFeature__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getLanguageFeatureAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsAssignment_4_2_1()); }
(rule__LanguageFeature__DependsAssignment_4_2_1)
{ after(grammarAccess.getLanguageFeatureAccess().getDependsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageFeature__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_5__0__Impl
	rule__LanguageFeature__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesKeyword_5_0()); }

	'excludes' 

{ after(grammarAccess.getLanguageFeatureAccess().getExcludesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_5__1__Impl
	rule__LanguageFeature__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesAssignment_5_1()); }
(rule__LanguageFeature__ExcludesAssignment_5_1)
{ after(grammarAccess.getLanguageFeatureAccess().getExcludesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getGroup_5_2()); }
(rule__LanguageFeature__Group_5_2__0)*
{ after(grammarAccess.getLanguageFeatureAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LanguageFeature__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_5_2__0__Impl
	rule__LanguageFeature__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getLanguageFeatureAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesAssignment_5_2_1()); }
(rule__LanguageFeature__ExcludesAssignment_5_2_1)
{ after(grammarAccess.getLanguageFeatureAccess().getExcludesAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageFeature__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_7__0__Impl
	rule__LanguageFeature__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getLanguagemoduleKeyword_7_0()); }

	'languagemodule' 

{ after(grammarAccess.getLanguageFeatureAccess().getLanguagemoduleKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getModuleAssignment_7_1()); }
(rule__LanguageFeature__ModuleAssignment_7_1)
{ after(grammarAccess.getLanguageFeatureAccess().getModuleAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LanguageFeature__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_8__0__Impl
	rule__LanguageFeature__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getChildrenKeyword_8_0()); }

	'children' 

{ after(grammarAccess.getLanguageFeatureAccess().getChildrenKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_8__1__Impl
	rule__LanguageFeature__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_8_1()); }

	'{' 

{ after(grammarAccess.getLanguageFeatureAccess().getLeftCurlyBracketKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_8__2__Impl
	rule__LanguageFeature__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getChildrenAssignment_8_2()); }
(rule__LanguageFeature__ChildrenAssignment_8_2)
{ after(grammarAccess.getLanguageFeatureAccess().getChildrenAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_8__3__Impl
	rule__LanguageFeature__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getChildrenAssignment_8_3()); }
(rule__LanguageFeature__ChildrenAssignment_8_3)*
{ after(grammarAccess.getLanguageFeatureAccess().getChildrenAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageFeature__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguageFeature__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_8_4()); }

	'}' 

{ after(grammarAccess.getLanguageFeatureAccess().getRightCurlyBracketKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MandatoryChild__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryChild__Group__0__Impl
	rule__MandatoryChild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryChild__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryChildAccess().getMandatoryKeyword_0()); }

	'mandatory' 

{ after(grammarAccess.getMandatoryChildAccess().getMandatoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryChild__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryChild__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryChild__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryChildAccess().getFeatureAssignment_1()); }
(rule__MandatoryChild__FeatureAssignment_1)
{ after(grammarAccess.getMandatoryChildAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalChild__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalChild__Group__0__Impl
	rule__OptionalChild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalChild__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalChildAccess().getOptionalKeyword_0()); }

	'optional' 

{ after(grammarAccess.getOptionalChildAccess().getOptionalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalChild__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalChild__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalChild__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalChildAccess().getFeatureAssignment_1()); }
(rule__OptionalChild__FeatureAssignment_1)
{ after(grammarAccess.getOptionalChildAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrGroupChild__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group__0__Impl
	rule__OrGroupChild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getOrKeyword_0()); }

	'or' 

{ after(grammarAccess.getOrGroupChildAccess().getOrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrGroupChild__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group__1__Impl
	rule__OrGroupChild__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOrGroupChildAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrGroupChild__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group__2__Impl
	rule__OrGroupChild__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesAssignment_2()); }
(rule__OrGroupChild__FeaturesAssignment_2)
{ after(grammarAccess.getOrGroupChildAccess().getFeaturesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrGroupChild__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group__3__Impl
	rule__OrGroupChild__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getGroup_3()); }
(rule__OrGroupChild__Group_3__0)*
{ after(grammarAccess.getOrGroupChildAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrGroupChild__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOrGroupChildAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrGroupChild__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group_3__0__Impl
	rule__OrGroupChild__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getOrGroupChildAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrGroupChild__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrGroupChild__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesAssignment_3_1()); }
(rule__OrGroupChild__FeaturesAssignment_3_1)
{ after(grammarAccess.getOrGroupChildAccess().getFeaturesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlternativeGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group__0__Impl
	rule__AlternativeGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getAlternativeKeyword_0()); }

	'alternative' 

{ after(grammarAccess.getAlternativeGroupAccess().getAlternativeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group__1__Impl
	rule__AlternativeGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAlternativeGroupAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group__2__Impl
	rule__AlternativeGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesAssignment_2()); }
(rule__AlternativeGroup__FeaturesAssignment_2)
{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group__3__Impl
	rule__AlternativeGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getGroup_3()); }
(rule__AlternativeGroup__Group_3__0)*
{ after(grammarAccess.getAlternativeGroupAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAlternativeGroupAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AlternativeGroup__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group_3__0__Impl
	rule__AlternativeGroup__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAlternativeGroupAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeGroup__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeGroup__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesAssignment_3_1()); }
(rule__AlternativeGroup__FeaturesAssignment_3_1)
{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariabilityPoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__0__Impl
	rule__VariabilityPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getVariationpointKeyword_0()); }

	'variationpoint' 

{ after(grammarAccess.getVariabilityPointAccess().getVariationpointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__1__Impl
	rule__VariabilityPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getNameAssignment_1()); }
(rule__VariabilityPoint__NameAssignment_1)
{ after(grammarAccess.getVariabilityPointAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__2__Impl
	rule__VariabilityPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getGroup_2()); }
(rule__VariabilityPoint__Group_2__0)?
{ after(grammarAccess.getVariabilityPointAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__3__Impl
	rule__VariabilityPoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getVariabilityPointAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__4__Impl
	rule__VariabilityPoint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getVariationsAssignment_4()); }
(rule__VariabilityPoint__VariationsAssignment_4)
{ after(grammarAccess.getVariabilityPointAccess().getVariationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__5__Impl
	rule__VariabilityPoint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getVariationsAssignment_5()); }
(rule__VariabilityPoint__VariationsAssignment_5)*
{ after(grammarAccess.getVariabilityPointAccess().getVariationsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getVariabilityPointAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__VariabilityPoint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group_2__0__Impl
	rule__VariabilityPoint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvesKeyword_2_0()); }

	'involves' 

{ after(grammarAccess.getVariabilityPointAccess().getInvolvesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group_2__1__Impl
	rule__VariabilityPoint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesAssignment_2_1()); }
(rule__VariabilityPoint__InvolvedFeaturesAssignment_2_1)
{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getGroup_2_2()); }
(rule__VariabilityPoint__Group_2_2__0)*
{ after(grammarAccess.getVariabilityPointAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariabilityPoint__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group_2_2__0__Impl
	rule__VariabilityPoint__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getVariabilityPointAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityPoint__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariabilityPoint__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesAssignment_2_2_1()); }
(rule__VariabilityPoint__InvolvedFeaturesAssignment_2_2_1)
{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group__0__Impl
	rule__Variation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getVariationAction_0()); }
(

)
{ after(grammarAccess.getVariationAccess().getVariationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group__1__Impl
	rule__Variation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getDefaultAssignment_1()); }
(rule__Variation__DefaultAssignment_1)?
{ after(grammarAccess.getVariationAccess().getDefaultAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group__2__Impl
	rule__Variation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getVariationKeyword_2()); }

	'variation' 

{ after(grammarAccess.getVariationAccess().getVariationKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group__3__Impl
	rule__Variation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getNameAssignment_3()); }
(rule__Variation__NameAssignment_3)
{ after(grammarAccess.getVariationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getGroup_4()); }
(rule__Variation__Group_4__0)?
{ after(grammarAccess.getVariationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Variation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group_4__0__Impl
	rule__Variation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getLanguagemoduleKeyword_4_0()); }

	'languagemodule' 

{ after(grammarAccess.getVariationAccess().getLanguagemoduleKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getModuleAssignment_4_1()); }
(rule__Variation__ModuleAssignment_4_1)
{ after(grammarAccess.getVariationAccess().getModuleAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LanguageProductLine__ImplementationFileAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getImplementationFileEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getLanguageProductLineAccess().getImplementationFileEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__ProductLineVariabilityAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getProductLineVariabilityProductLineVariabilityParserRuleCall_2_1_0()); }
	ruleProductLineVariability{ after(grammarAccess.getLanguageProductLineAccess().getProductLineVariabilityProductLineVariabilityParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageProductLine__LanguageVariabilityAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageProductLineAccess().getLanguageVariabilityLanguageVariabilityParserRuleCall_3_1_0()); }
	ruleLanguageVariability{ after(grammarAccess.getLanguageProductLineAccess().getLanguageVariabilityLanguageVariabilityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__FeaturesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_1_0()); }
	ruleLanguageFeature{ after(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__FeaturesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_2_0()); }
	ruleLanguageFeature{ after(grammarAccess.getProductLineVariabilityAccess().getFeaturesLanguageFeatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLineVariability__RootFeatureAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineVariabilityAccess().getRootFeatureLanguageFeatureCrossReference_4_0()); }
(
{ before(grammarAccess.getProductLineVariabilityAccess().getRootFeatureLanguageFeatureEStringParserRuleCall_4_0_1()); }
	ruleEString{ after(grammarAccess.getProductLineVariabilityAccess().getRootFeatureLanguageFeatureEStringParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getProductLineVariabilityAccess().getRootFeatureLanguageFeatureCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__VariabilityPointsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_0_0()); }
	ruleVariabilityPoint{ after(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageVariability__VariabilityPointsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_1_0()); }
	ruleVariabilityPoint{ after(grammarAccess.getLanguageVariabilityAccess().getVariabilityPointsVariabilityPointParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__AbstractAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getAbstractAbstractKeyword_1_0()); }
(
{ before(grammarAccess.getLanguageFeatureAccess().getAbstractAbstractKeyword_1_0()); }

	'abstract' 

{ after(grammarAccess.getLanguageFeatureAccess().getAbstractAbstractKeyword_1_0()); }
)

{ after(grammarAccess.getLanguageFeatureAccess().getAbstractAbstractKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getNameEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getNameEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__DependsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_1_0()); }
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureEStringParserRuleCall_4_1_0_1()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureEStringParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__DependsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureEStringParserRuleCall_4_2_1_0_1()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureEStringParserRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getLanguageFeatureAccess().getDependsLanguageFeatureCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__ExcludesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_1_0()); }
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureEStringParserRuleCall_5_1_0_1()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureEStringParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__ExcludesAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_2_1_0()); }
(
{ before(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureEStringParserRuleCall_5_2_1_0_1()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureEStringParserRuleCall_5_2_1_0_1()); }
)
{ after(grammarAccess.getLanguageFeatureAccess().getExcludesLanguageFeatureCrossReference_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__ModuleAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getModuleEStringParserRuleCall_7_1_0()); }
	ruleEString{ after(grammarAccess.getLanguageFeatureAccess().getModuleEStringParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__ChildrenAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_2_0()); }
	ruleRelation{ after(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageFeature__ChildrenAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_3_0()); }
	ruleRelation{ after(grammarAccess.getLanguageFeatureAccess().getChildrenRelationParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryChild__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getMandatoryChildAccess().getFeatureLanguageFeatureEStringParserRuleCall_1_0_1()); }
	ruleEString{ after(grammarAccess.getMandatoryChildAccess().getFeatureLanguageFeatureEStringParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMandatoryChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalChild__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getOptionalChildAccess().getFeatureLanguageFeatureEStringParserRuleCall_1_0_1()); }
	ruleEString{ after(grammarAccess.getOptionalChildAccess().getFeatureLanguageFeatureEStringParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getOptionalChildAccess().getFeatureLanguageFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__FeaturesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_2_0()); }
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrGroupChild__FeaturesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); }
(
{ before(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureEStringParserRuleCall_3_1_0_1()); }
	ruleEString{ after(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureEStringParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getOrGroupChildAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__FeaturesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_2_0()); }
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureEStringParserRuleCall_2_0_1()); }
	ruleEString{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureEStringParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeGroup__FeaturesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); }
(
{ before(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureEStringParserRuleCall_3_1_0_1()); }
	ruleEString{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureEStringParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getAlternativeGroupAccess().getFeaturesLanguageFeatureCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getVariabilityPointAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__InvolvedFeaturesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_1_0()); }
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureEStringParserRuleCall_2_1_0_1()); }
	ruleEString{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureEStringParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__InvolvedFeaturesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureEStringParserRuleCall_2_2_1_0_1()); }
	ruleEString{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureEStringParserRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getVariabilityPointAccess().getInvolvedFeaturesLanguageFeatureCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__VariationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_4_0()); }
	ruleVariation{ after(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityPoint__VariationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_5_0()); }
	ruleVariation{ after(grammarAccess.getVariabilityPointAccess().getVariationsVariationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__DefaultAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getDefaultDefaultKeyword_1_0()); }
(
{ before(grammarAccess.getVariationAccess().getDefaultDefaultKeyword_1_0()); }

	'default' 

{ after(grammarAccess.getVariationAccess().getDefaultDefaultKeyword_1_0()); }
)

{ after(grammarAccess.getVariationAccess().getDefaultDefaultKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getNameEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getVariationAccess().getNameEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__ModuleAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariationAccess().getModuleEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getVariationAccess().getModuleEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


