/*
 * generated by Xtext
 */
grammar InternalLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.diverse.puzzle.adl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.puzzle.adl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.puzzle.adl.services.LanguageGrammarAccess;

}

@parser::members {
 
 	private LanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePuzzleComposition
entryRulePuzzleComposition 
:
{ before(grammarAccess.getPuzzleCompositionRule()); }
	 rulePuzzleComposition
{ after(grammarAccess.getPuzzleCompositionRule()); } 
	 EOF 
;

// Rule PuzzleComposition
rulePuzzleComposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getGroup()); }
(rule__PuzzleComposition__Group__0)
{ after(grammarAccess.getPuzzleCompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeLanguage
entryRuleCompositeLanguage 
:
{ before(grammarAccess.getCompositeLanguageRule()); }
	 ruleCompositeLanguage
{ after(grammarAccess.getCompositeLanguageRule()); } 
	 EOF 
;

// Rule CompositeLanguage
ruleCompositeLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeLanguageAccess().getGroup()); }
(rule__CompositeLanguage__Group__0)
{ after(grammarAccess.getCompositeLanguageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnector
entryRuleConnector 
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorAccess().getAggregationConnectorParserRuleCall()); }
	ruleAggregationConnector
{ after(grammarAccess.getConnectorAccess().getAggregationConnectorParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregationConnector
entryRuleAggregationConnector 
:
{ before(grammarAccess.getAggregationConnectorRule()); }
	 ruleAggregationConnector
{ after(grammarAccess.getAggregationConnectorRule()); } 
	 EOF 
;

// Rule AggregationConnector
ruleAggregationConnector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregationConnectorAccess().getGroup()); }
(rule__AggregationConnector__Group__0)
{ after(grammarAccess.getAggregationConnectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PuzzleComposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group__0__Impl
	rule__PuzzleComposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getPuzzleCompositionAction_0()); }
(

)
{ after(grammarAccess.getPuzzleCompositionAccess().getPuzzleCompositionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PuzzleComposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group__1__Impl
	rule__PuzzleComposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getImportKeyword_1()); }

	'import' 

{ after(grammarAccess.getPuzzleCompositionAccess().getImportKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PuzzleComposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group__2__Impl
	rule__PuzzleComposition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getMelangeFileAssignment_2()); }
(rule__PuzzleComposition__MelangeFileAssignment_2)
{ after(grammarAccess.getPuzzleCompositionAccess().getMelangeFileAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PuzzleComposition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getGroup_3()); }
(rule__PuzzleComposition__Group_3__0)?
{ after(grammarAccess.getPuzzleCompositionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PuzzleComposition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group_3__0__Impl
	rule__PuzzleComposition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getCompositesAssignment_3_0()); }
(rule__PuzzleComposition__CompositesAssignment_3_0)
{ after(grammarAccess.getPuzzleCompositionAccess().getCompositesAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PuzzleComposition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PuzzleComposition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getCompositesAssignment_3_1()); }
(rule__PuzzleComposition__CompositesAssignment_3_1)*
{ after(grammarAccess.getPuzzleCompositionAccess().getCompositesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeLanguage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__0__Impl
	rule__CompositeLanguage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getCompositeLanguageAction_0()); }
(

)
{ after(grammarAccess.getCompositeLanguageAccess().getCompositeLanguageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__1__Impl
	rule__CompositeLanguage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getCompositeKeyword_1()); }

	'composite' 

{ after(grammarAccess.getCompositeLanguageAccess().getCompositeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__2__Impl
	rule__CompositeLanguage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getNameAssignment_2()); }
(rule__CompositeLanguage__NameAssignment_2)
{ after(grammarAccess.getCompositeLanguageAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__3__Impl
	rule__CompositeLanguage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getCompositeLanguageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__4__Impl
	rule__CompositeLanguage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getGroup_4()); }
(rule__CompositeLanguage__Group_4__0)?
{ after(grammarAccess.getCompositeLanguageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getCompositeLanguageAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CompositeLanguage__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group_4__0__Impl
	rule__CompositeLanguage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getLinksAssignment_4_0()); }
(rule__CompositeLanguage__LinksAssignment_4_0)
{ after(grammarAccess.getCompositeLanguageAccess().getLinksAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLanguage__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeLanguage__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getLinksAssignment_4_1()); }
(rule__CompositeLanguage__LinksAssignment_4_1)*
{ after(grammarAccess.getCompositeLanguageAccess().getLinksAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AggregationConnector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__0__Impl
	rule__AggregationConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getConnectorKeyword_0()); }

	'connector' 

{ after(grammarAccess.getAggregationConnectorAccess().getConnectorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationConnector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__1__Impl
	rule__AggregationConnector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAggregationConnectorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationConnector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__2__Impl
	rule__AggregationConnector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getLeftAssignment_2()); }
(rule__AggregationConnector__LeftAssignment_2)
{ after(grammarAccess.getAggregationConnectorAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationConnector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__3__Impl
	rule__AggregationConnector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getAggregationConnectorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationConnector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__4__Impl
	rule__AggregationConnector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getRightAssignment_4()); }
(rule__AggregationConnector__RightAssignment_4)
{ after(grammarAccess.getAggregationConnectorAccess().getRightAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationConnector__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AggregationConnector__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAggregationConnectorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__PuzzleComposition__MelangeFileAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getMelangeFileSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPuzzleCompositionAccess().getMelangeFileSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__CompositesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getCompositesCompositeLanguageParserRuleCall_3_0_0()); }
	ruleCompositeLanguage{ after(grammarAccess.getPuzzleCompositionAccess().getCompositesCompositeLanguageParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PuzzleComposition__CompositesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPuzzleCompositionAccess().getCompositesCompositeLanguageParserRuleCall_3_1_0()); }
	ruleCompositeLanguage{ after(grammarAccess.getPuzzleCompositionAccess().getCompositesCompositeLanguageParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCompositeLanguageAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__LinksAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getLinksConnectorParserRuleCall_4_0_0()); }
	ruleConnector{ after(grammarAccess.getCompositeLanguageAccess().getLinksConnectorParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLanguage__LinksAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeLanguageAccess().getLinksConnectorParserRuleCall_4_1_0()); }
	ruleConnector{ after(grammarAccess.getCompositeLanguageAccess().getLinksConnectorParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getLeftIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAggregationConnectorAccess().getLeftIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationConnector__RightAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationConnectorAccess().getRightIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAggregationConnectorAccess().getRightIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


