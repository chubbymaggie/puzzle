package fr.inria.diverse.melange.ui.builder

import org.eclipse.core.resources.IProject
import org.eclipse.core.runtime.IProgressMonitor
import org.eclipse.emf.ecore.resource.Resource
import fr.inria.diverse.melange.metamodel.melange.ModelTypingSpace
import fr.inria.diverse.puzzle.metrics.actions.ComputeMetricsActionImpl

class MetricsBuilder
{
	def void computeMetrics(Resource res, IProject project, IProgressMonitor monitor) {
		val root = res.contents.head as ModelTypingSpace
		ComputeMetricsActionImpl.instance.computeMetrics(root, project);
	}
	
	def private SynthesisProperties getSynthesisProperties(){
		var ConceptComparison conceptComparisonOperator = new DeepConceptComparison();
		var MethodComparison methodComparisonOperator = SignatureAndSourceMethodComparison.getInstance();
		var VariabilityInferer variabilityInferer = new DiverSEInferrer();
		var GraphPartition graphPartition = new MembershipGraphPartition();
		var SynthesisProperties properties = new SynthesisProperties(conceptComparisonOperator, methodComparisonOperator, variabilityInferer, graphPartition);
		return properties;
	}
}