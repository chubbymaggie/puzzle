package fr.inria.diverse.puzzle.graphsgenerator.impl;

import java.util.Random;

import fr.inria.diverse.k3.sle.common.graphs.DependencyGraph;
import fr.inria.diverse.k3.sle.common.graphs.DependencyVertex;

public class GraphGenerator {

	public DependencyGraph generateGraph(int size, long seed){
		Random generator = new Random(seed);
		
		// Creating an empty graph (without arcs)
		DependencyGraph graph = new DependencyGraph();
		for (int i = 0; i < size; i++) {
			DependencyVertex vertex = new DependencyVertex(Integer.toString(i));
			graph.getVertex().add(vertex);
		}
		
		int iterations = size * 2;
		double num = generator.nextDouble() * (0.5);
		
		
		return null;
	}
}
