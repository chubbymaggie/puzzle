package fr.inria.diverse.puzzle.metrics.evaluators.syntax;

import java.util.ArrayList;
import java.util.Hashtable;

import org.eclipse.emf.ecore.EPackage;

import fr.inria.diverse.k3.sle.common.utils.EcoreQueries;
import fr.inria.diverse.k3.sle.common.utils.FamiliesServices;
import fr.inria.diverse.k3.sle.common.utils.MelangeServices;
import fr.inria.diverse.k3.sle.common.vos.ConceptMemberVO;
import fr.inria.diverse.k3.sle.common.vos.ConceptMethodMemberVO;
import fr.inria.diverse.melange.metamodel.melange.Language;

public class SemanticOverlapping {

	public static String evaluate(ArrayList<Language> languages){
		Hashtable<String, Integer> membersSizeTable = new Hashtable<String, Integer>();
		ArrayList<ConceptMethodMemberVO> conceptMethodMemberList = FamiliesServices.getInstance().getConceptMethodMemberMappingList(languages);
		
		for (ConceptMethodMemberVO conceptMethodMemberVO : conceptMethodMemberList) {
			if(membersSizeTable.get(conceptMethodMemberVO.getMemberName()) == null)
				membersSizeTable.put(conceptMethodMemberVO.getMemberName(), 1);
			else{
				Integer currentValue = membersSizeTable.get(conceptMethodMemberVO.getMemberName());
				membersSizeTable.put(conceptMethodMemberVO.getMemberName(), currentValue + 1);
			}
		}
		
		String answer = "var semanticVennData = [";
		for (int i = 0; i < languages.size(); i++) {
			EPackage currentEPackage = MelangeServices.getEPackageFromLanguage(languages.get(i));
			answer += "{sets : [" + i + "], label : '" + currentEPackage.getName() + "', size : " + membersSizeTable.get(currentEPackage.getName()) + ",}";
			answer += ",\n              ";
		}
		
		boolean first = true;
		for (int i = 0; i < languages.size(); i++) {
			Language languageI = languages.get(i);
			for (int j = i + 1; j < languages.size(); j++) {
				Language languageJ = languages.get(j);
				if(!first) answer += ",\n              ";
				answer += "{sets : [" + i + "," + j + "], size:" + EcoreQueries.getIntersection(languageI, languageJ).size() + "}";
				first = false;
			}
		}
		
		answer += "];";
		
		return answer;
	}
}
