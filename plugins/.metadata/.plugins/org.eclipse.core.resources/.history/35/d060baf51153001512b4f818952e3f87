package fr.inria.diverse.k3.sle.common.graphsOperators;

import java.util.ArrayList;
import java.util.Stack;

import fr.inria.diverse.k3.sle.common.commands.ConceptComparison;
import fr.inria.diverse.k3.sle.common.commands.GraphPartition;
import fr.inria.diverse.k3.sle.common.graphs.EcoreGraph;
import fr.inria.diverse.k3.sle.common.graphs.EcoreVertex;
import fr.inria.diverse.k3.sle.common.tuples.TupleMembersConcepts;

public class TarjansPartition implements GraphPartition {

	private int tarjansIndex;
	private Stack<EcoreVertex> tarjansStack;
	
	@Override
	public void graphPartition(EcoreGraph graph,
			ArrayList<TupleMembersConcepts> membersConceptList,
			ConceptComparison conceptComparisonOperator) {
		
		this.tarjansIndex = 0;
		tarjansStack = new Stack<EcoreVertex>();
		graph.setGroups(new ArrayList<ArrayList<EcoreVertex>>());
		for (EcoreVertex currentVertex : graph.getVertex()) {
			if(currentVertex.getTarjansIndex() == -1){
				this.strongConnect(graph, currentVertex);
			}
		}
		
	}

	private void strongConnect(EcoreGraph graph, EcoreVertex currentVertex) {
		// TODO Auto-generated method stub
		
	}

}
