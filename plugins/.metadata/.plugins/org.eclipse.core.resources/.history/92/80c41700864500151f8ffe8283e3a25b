package fr.inria.diverse.puzzle.metrics.evaluators;

import java.util.ArrayList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EPackage;

import fr.inria.diverse.k3.sle.common.utils.FamiliesServices;
import fr.inria.diverse.k3.sle.common.vos.ConceptMemberVO;
import fr.inria.diverse.k3.sle.common.vos.ConceptMembersGroupVO;

public class SyntacticIndividualizationRatio {

	public static String evaluate(ArrayList<EPackage> ePackages){
		String answer = "";
		ArrayList<ConceptMemberVO> conceptMemberList = FamiliesServices.getInstance().getConceptMemberMappingList(ePackages);
		ArrayList<ConceptMembersGroupVO> conceptMemberGroupList = FamiliesServices.getInstance().getConceptMemberGroupList(conceptMemberList);
		
		for (EPackage ePackage : ePackages) {
			double count = 0;
			for (ConceptMembersGroupVO conceptMembersGroupVO : conceptMemberGroupList) {
				if(conceptMembersGroupVO.getMemberGroup().size() >= 2 && conceptMembersGroupVO.getMemberGroup().contains(ePackage.getName())){
					count++;
				}
			}
			double individualizationRatio = count/countConstructs(ePackage);
			answer += ePackage.getName() + ": " + individualizationRatio;
			
		}
		
		return answer;
	}
	
	private static double countConstructs(EPackage ePackage){
		double count = 0;
		for (EClassifier eClassifier : ePackage.getEClassifiers()) {
			if(eClassifier instanceof EClass){
				count++;
			}
		}
		
		for (EPackage eSubPackage : ePackage.getESubpackages()) {
			count += countConstructs(eSubPackage);
		}
		
		return count;
	}
}
