package es.us.isa.fama;

import java.io.File;
import java.io.FileInputStream;
import java.net.URL;

import org.eclipse.core.runtime.FileLocator;
import org.eclipse.core.runtime.Platform;

import es.us.isa.FAMA.Reasoner.ConfigurableQuestionFactory;
import es.us.isa.FAMA.Reasoner.Question;
import es.us.isa.FAMA.Reasoner.QuestionTrader;
import es.us.isa.FAMA.Reasoner.Reasoner;

public class PluginQuestionTrader extends QuestionTrader {

	@SuppressWarnings("unchecked")
	public PluginQuestionTrader(){
		super("OSGI");
		
		try {
			this.questionsMap.put("Products", (Class<Question>) Class.forName("es.us.isa.FAMA.Reasoner.questions.ProductsQuestion"));
			this.questionsMap.put("#Products", (Class<Question>) Class.forName("es.us.isa.FAMA.Reasoner.questions.NumberOfProductsQuestion"));

			URL configFilePath = Platform.getBundle("es.us.isa.fama").getEntry("/FaMaConfig.xml");
			File configFile = new File(FileLocator.resolve(configFilePath).toURI());
			
			
			this.reasonersIdMap.put("Choco", this.createReasoner(configFile, (Class<Reasoner>) es.us.isa.ChocoReasoner.ChocoReasoner.class));
			
			this.reasonersIdMap.put("Choco4exp", es.us.isa.ChocoReasoner4Exp.ChocoReasoner.class.newInstance());
			this.reasonersIdMap.put("ChocoAttributed", es.us.isa.ChocoReasoner.attributed.ChocoReasoner.class.newInstance());
			this.reasonersIdMap.put("ChocoAttributed4exp", es.us.isa.ChocoReasoner4Exp.attributed.ChocoReasoner.class.newInstance());
			this.reasonersIdMap.put("Sat4j", es.us.isa.Sat4jReasoner.Sat4jReasoner.class.newInstance());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private Reasoner createReasoner(File configFile, Class reasonerClass) throws Exception {
		Reasoner reasoner = (Reasoner) reasonerClass.newInstance();
		ConfigurableQuestionFactory qFact = new ConfigurableQuestionFactory();
		qFact.setClassLoader(reasoner.getClass().getClassLoader());
		qFact.parseConfigFile(new FileInputStream(configFile));
		reasoner.setFactory(qFact);
		return reasoner;
	}
}
