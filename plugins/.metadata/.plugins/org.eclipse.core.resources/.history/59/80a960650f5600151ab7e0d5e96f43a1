package fr.inria.diverse.puzzle.variabilityinferer.auxiliar;

import fr.inria.diverse.k3.sle.common.graphs.EcoreGraph;
import fr.inria.diverse.k3.sle.common.vos.SynthesisProperties;

/**
 * Generates PCMs in diverse formats for the variability model inferrers. 
 * @author David Mendez-Acuna
 */
public class PCMsGenerator {

	// --------------------------------------------------------
	// Constants
	// --------------------------------------------------------
	
	public static int OPEN_COMPARE_FORMAT = 1;
	
	public static int FAMA_FORMAT = 2;
	
	// --------------------------------------------------------
	// Methods
	// --------------------------------------------------------
	
	/**
	 * Generates a PCM for the modularization graph in the parameter and according to the desired format. 
	 * @throws Exception Throws an exception if the desired format is not supported. 
	 */
	public static String generatePCM(SynthesisProperties properties, EcoreGraph modularizationGraph, int format) throws Exception{
		if(format == OPEN_COMPARE_FORMAT)
			return generatePCMOpenCompareFormat(modularizationGraph);
		else if(format == FAMA_FORMAT)
			return generatePCMFamaFormat(modularizationGraph);
		else
			throw new Exception("PCM format not supported");
	}
	
	private static String generatePCMOpenCompareFormat(EcoreGraph modularizationGraph){
		return "";
	}
	
	private static String generatePCMFamaFormat(EcoreGraph modularizationGraph){
		return "";
	}
}
