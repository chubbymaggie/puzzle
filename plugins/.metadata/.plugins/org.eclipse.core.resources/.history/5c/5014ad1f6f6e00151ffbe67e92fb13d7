package fr.inria.diverse.puzzle.metrics.componentsMetrics;

import java.util.ArrayList;
import java.util.Hashtable;

import fr.inria.diverse.k3.sle.common.commands.ConceptComparison;
import fr.inria.diverse.k3.sle.common.commands.MethodComparison;
import fr.inria.diverse.k3.sle.common.graphs.DependencyGraph;
import fr.inria.diverse.k3.sle.common.graphs.EcoreGraph;
import fr.inria.diverse.k3.sle.common.graphs.EcoreGroup;
import fr.inria.diverse.melange.metamodel.melange.Language;

public class IntraConnectivty implements LanguageProductLineChartMetric {

	
	public Hashtable<String, Double> compute(EcoreGraph modularizationGraph){
		Hashtable<String, Double> data = new Hashtable<String, Double>();
		for (EcoreGroup group : modularizationGraph.getGroups()) {
			data.put(group.getName(), this.computeIntraConnectivity(group));
		}
		return data;
	}

	/**
	 * Computes the intra-connectivity metric for the given ecore group.
	 * @param group
	 * @return
	 */
	private Double computeIntraConnectivity(EcoreGroup group) {
		int intraEdgeDependencies = this.computeIntraEdgeDependencies(group);
		double intraConnectivity = intraEdgeDependencies / (group.getVertex().size() ^ 2);
		return null;
	}

	private int computeIntraEdgeDependencies(EcoreGroup group) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getVariablesDeclaration(ArrayList<Language> languages,
			ConceptComparison conceptComparisonOperator,
			MethodComparison methodComparisonOperator,
			EcoreGraph modularizationGraph, DependencyGraph dependencyGraph)
			throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getWindow(ArrayList<Language> languages) {
		// TODO Auto-generated method stub
		return null;
	}
}
