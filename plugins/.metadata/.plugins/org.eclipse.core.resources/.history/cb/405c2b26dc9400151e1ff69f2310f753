// automatically generated by Xtext
grammar fr.inria.diverse.puzzle.Multivar with org.eclipse.xtext.common.Terminals

import "http://fr.inria.diverse.puzzle.synvar.metamodel" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

LanguageProductLine returns LanguageProductLine:
	{LanguageProductLine}
		('import' implementationFile=EString)?
		
		('productlinevariability' productLineVariability=ProductLineVariability)?
		('languagevariability' languageVariability=LanguageVariability)?
	;

EString returns ecore::EString:
	STRING | ID;

ProductLineVariability returns ProductLineVariability:
	'{'
		'rootFeature' rootFeature=[LanguageFeature|EString]
		'features' '{' features+=LanguageFeature ( "," features+=LanguageFeature)* '}' 
	'}';

LanguageVariability returns LanguageVariability:
	{LanguageVariability}
	'LanguageVariability'
	'{'
		('variabilityPoints' '{' variabilityPoints+=VariabilityPoint ( "," variabilityPoints+=VariabilityPoint)* '}' )?
	'}';

LanguageFeature returns LanguageFeature:
	{LanguageFeature}
	(abstract?='abstract')?
	'LanguageFeature'
	name=EString
	'{'
		('module' module=EString)?
		('depends' '(' depends+=[LanguageFeature|EString] ( "," depends+=[LanguageFeature|EString])* ')' )?
		('excludes' '(' excludes+=[LanguageFeature|EString] ( "," excludes+=[LanguageFeature|EString])* ')' )?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

VariabilityPoint returns VariabilityPoint:
	'VariabilityPoint'
	name=EString
	'{'
		('involvedFeatures' '(' involvedFeatures+=[LanguageFeature|EString] ( "," involvedFeatures+=[LanguageFeature|EString])* ')' )?
		'variations' '{' variations+=Variation ( "," variations+=Variation)* '}' 
	'}';

Variation returns Variation:
	{Variation}
	'Variation'
	name=EString
	'{'
		('module' module=EString)?
	'}';
