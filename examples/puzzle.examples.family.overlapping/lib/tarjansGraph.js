var G = new jsnx.DiGraph();
G.addNodesFrom(["Trigger: [fsm]"], {group:0});
G.addNodesFrom(["Statement: [fsm]"], {group:1});
G.addNodesFrom(["Constraint: [fsm, flowchart]"], {group:2});
G.addNodesFrom(["NamedElement: [fsm]"], {group:3});
G.addNodesFrom(["Transition: [fsm]","AbstractState: [fsm]"], {group:4});
G.addNodesFrom(["StateMachine: [fsm]"], {group:5});
G.addNodesFrom(["Program: [fsm]"], {group:6});
G.addNodesFrom(["State: [fsm]"], {group:7});
G.addNodesFrom(["PseudostateKind: [fsm]"], {group:8});
G.addNodesFrom(["Pseudostate: [fsm]"], {group:9});
G.addNodesFrom(["FinalState: [fsm]"], {group:10});
G.addNodesFrom(["Expression: [fsm, kmLogo, flowchart]"], {group:11});
G.addNodesFrom(["Conditional: [fsm]"], {group:12});
G.addNodesFrom(["Loop: [fsm]"], {group:13});
G.addNodesFrom(["VarDecl: [fsm]"], {group:14});
G.addNodesFrom(["ConsoleOutput: [fsm]"], {group:15});
G.addNodesFrom(["Println: [fsm]"], {group:16});
G.addNodesFrom(["Print: [fsm]"], {group:17});
G.addNodesFrom(["Assignation: [fsm]"], {group:18});
G.addNodesFrom(["Wait: [fsm]"], {group:19});
G.addNodesFrom(["RelationalConstraint: [fsm, flowchart]"], {group:20});
G.addNodesFrom(["VarReference: [fsm, flowchart]"], {group:21});
G.addNodesFrom(["Literal: [fsm, kmLogo, flowchart]"], {group:22});
G.addNodesFrom(["IntegerLit: [fsm, kmLogo, flowchart]"], {group:23});
G.addNodesFrom(["StringLit: [fsm, kmLogo, flowchart]"], {group:24});
G.addNodesFrom(["BoolLit: [fsm, kmLogo, flowchart]"], {group:25});
G.addNodesFrom(["ArithmeticOperator: [fsm, kmLogo, flowchart]"], {group:26});
G.addNodesFrom(["ArithmeticExpression: [fsm, kmLogo, flowchart]"], {group:27});
G.addNodesFrom(["RelationalOperator: [fsm, kmLogo, flowchart]"], {group:28});
G.addNodesFrom(["RelationalExpression: [fsm, kmLogo, flowchart]"], {group:29});
G.addNodesFrom(["Instruction: [kmLogo]"], {group:30});
G.addNodesFrom(["LogoProgram: [kmLogo]"], {group:31});
G.addNodesFrom(["Primitive: [kmLogo]"], {group:32});
G.addNodesFrom(["Back: [kmLogo]"], {group:33});
G.addNodesFrom(["Forward: [kmLogo]"], {group:34});
G.addNodesFrom(["Left: [kmLogo]"], {group:35});
G.addNodesFrom(["Right: [kmLogo]"], {group:36});
G.addNodesFrom(["PenDown: [kmLogo]"], {group:37});
G.addNodesFrom(["PenUp: [kmLogo]"], {group:38});
G.addNodesFrom(["Clear: [kmLogo]"], {group:39});
G.addNodesFrom(["Parameter: [kmLogo]"], {group:40});
G.addNodesFrom(["ProcDeclaration: [kmLogo]","ProcCall: [kmLogo]"], {group:41});
G.addNodesFrom(["Block: [kmLogo]"], {group:42});
G.addNodesFrom(["ControlStructure: [kmLogo]"], {group:43});
G.addNodesFrom(["If: [kmLogo]"], {group:44});
G.addNodesFrom(["Repeat: [kmLogo]"], {group:45});
G.addNodesFrom(["While: [kmLogo]"], {group:46});
G.addNodesFrom(["ParameterCall: [kmLogo]"], {group:47});
G.addNodesFrom(["Arc: [flowchart]","Node: [flowchart]"], {group:48});
G.addNodesFrom(["Flowchart: [flowchart]"], {group:49});
G.addNodesFrom(["Subflow: [flowchart]"], {group:50});
G.addNodesFrom(["Action: [flowchart]"], {group:51});
G.addNodesFrom(["Decision: [flowchart]"], {group:52});

G.addEdgesFrom([["StateMachine: [fsm]","AbstractState: [fsm]"],["StateMachine: [fsm]","Transition: [fsm]"],["AbstractState: [fsm]","Transition: [fsm]"],["AbstractState: [fsm]","Transition: [fsm]"],["State: [fsm]","Program: [fsm]"],["State: [fsm]","Program: [fsm]"],["State: [fsm]","Program: [fsm]"],["Transition: [fsm]","Trigger: [fsm]"],["Transition: [fsm]","AbstractState: [fsm]"],["Transition: [fsm]","AbstractState: [fsm]"],["Transition: [fsm]","Statement: [fsm]"],["Transition: [fsm]","Constraint: [fsm, flowchart]"],["Pseudostate: [fsm]","PseudostateKind: [fsm]"],["Program: [fsm]","Statement: [fsm]"],["Conditional: [fsm]","Expression: [fsm, kmLogo, flowchart]"],["Conditional: [fsm]","Program: [fsm]"],["Loop: [fsm]","Expression: [fsm, kmLogo, flowchart]"],["Loop: [fsm]","Program: [fsm]"],["VarDecl: [fsm]","Expression: [fsm, kmLogo, flowchart]"],["Assignation: [fsm]","VarDecl: [fsm]"],["Assignation: [fsm]","Expression: [fsm, kmLogo, flowchart]"],["RelationalConstraint: [fsm, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["ArithmeticExpression: [fsm, kmLogo, flowchart]","ArithmeticOperator: [fsm, kmLogo, flowchart]"],["ArithmeticExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["ArithmeticExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["RelationalExpression: [fsm, kmLogo, flowchart]","RelationalOperator: [fsm, kmLogo, flowchart]"],["RelationalExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["RelationalExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["LogoProgram: [kmLogo]","Instruction: [kmLogo]"],["Back: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["Forward: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["Left: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["Right: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["ProcCall: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["ProcCall: [kmLogo]","ProcDeclaration: [kmLogo]"],["ProcDeclaration: [kmLogo]","Parameter: [kmLogo]"],["ProcDeclaration: [kmLogo]","ProcCall: [kmLogo]"],["ProcDeclaration: [kmLogo]","Instruction: [kmLogo]"],["Block: [kmLogo]","Instruction: [kmLogo]"],["If: [kmLogo]","Block: [kmLogo]"],["If: [kmLogo]","Block: [kmLogo]"],["ControlStructure: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["Repeat: [kmLogo]","Block: [kmLogo]"],["While: [kmLogo]","Block: [kmLogo]"],["ParameterCall: [kmLogo]","Parameter: [kmLogo]"],["Flowchart: [flowchart]","Node: [flowchart]"],["Flowchart: [flowchart]","Arc: [flowchart]"],["Node: [flowchart]","Arc: [flowchart]"],["Node: [flowchart]","Arc: [flowchart]"],["Arc: [flowchart]","Node: [flowchart]"],["Arc: [flowchart]","Node: [flowchart]"],["Decision: [flowchart]","Constraint: [fsm, flowchart]"],["StateMachine: [fsm]","NamedElement: [fsm]"],["AbstractState: [fsm]","NamedElement: [fsm]"],["State: [fsm]","AbstractState: [fsm]"],["Transition: [fsm]","NamedElement: [fsm]"],["Pseudostate: [fsm]","AbstractState: [fsm]"],["FinalState: [fsm]","State: [fsm]"],["Program: [fsm]","Statement: [fsm]"],["Conditional: [fsm]","Statement: [fsm]"],["Loop: [fsm]","Statement: [fsm]"],["VarDecl: [fsm]","Statement: [fsm]"],["ConsoleOutput: [fsm]","Statement: [fsm]"],["Println: [fsm]","ConsoleOutput: [fsm]"],["Print: [fsm]","ConsoleOutput: [fsm]"],["Assignation: [fsm]","Statement: [fsm]"],["Wait: [fsm]","Statement: [fsm]"],["RelationalConstraint: [fsm, flowchart]","Constraint: [fsm, flowchart]"],["VarReference: [fsm, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["Literal: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["IntegerLit: [fsm, kmLogo, flowchart]","Literal: [fsm, kmLogo, flowchart]"],["StringLit: [fsm, kmLogo, flowchart]","Literal: [fsm, kmLogo, flowchart]"],["BoolLit: [fsm, kmLogo, flowchart]","Literal: [fsm, kmLogo, flowchart]"],["ArithmeticExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["RelationalExpression: [fsm, kmLogo, flowchart]","Expression: [fsm, kmLogo, flowchart]"],["Primitive: [kmLogo]","Instruction: [kmLogo]"],["Back: [kmLogo]","Primitive: [kmLogo]"],["Forward: [kmLogo]","Primitive: [kmLogo]"],["Left: [kmLogo]","Primitive: [kmLogo]"],["Right: [kmLogo]","Primitive: [kmLogo]"],["PenDown: [kmLogo]","Primitive: [kmLogo]"],["PenUp: [kmLogo]","Primitive: [kmLogo]"],["Clear: [kmLogo]","Primitive: [kmLogo]"],["ProcCall: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["ProcDeclaration: [kmLogo]","Instruction: [kmLogo]"],["Block: [kmLogo]","Instruction: [kmLogo]"],["If: [kmLogo]","ControlStructure: [kmLogo]"],["ControlStructure: [kmLogo]","Instruction: [kmLogo]"],["Repeat: [kmLogo]","ControlStructure: [kmLogo]"],["While: [kmLogo]","ControlStructure: [kmLogo]"],["Parameter: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["ParameterCall: [kmLogo]","Expression: [fsm, kmLogo, flowchart]"],["Subflow: [flowchart]","Flowchart: [flowchart]"],["Subflow: [flowchart]","Node: [flowchart]"],["Action: [flowchart]","Node: [flowchart]"],["Decision: [flowchart]","Node: [flowchart]"]]);
