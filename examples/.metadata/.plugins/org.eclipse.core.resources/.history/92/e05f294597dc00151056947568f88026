package flowchartpck

import fr.inria.diverse.k3.al.annotationprocessor.Aspect
import fr.inria.diverse.k3.al.annotationprocessor.OverrideAspectMethod

import static extension flowchartpck.ActionAspect.*
import static extension flowchartpck.DecisionAspect.*
import static extension flowchartpck.EndAspect.*

import java.util.Hashtable
import flowchartpck.Start

@Aspect(className=Start)
public class StartAspect extends NodeAspect {

	@OverrideAspectMethod
	def void eval(Hashtable<String, Object> context){
		for(Arc arc : _self.outgoing){
			if(arc.target instanceof Action){
				(arc.target as Action).eval(context)
			}
			else if(arc.target instanceof Decision){
				(arc.target as Decision).eval(context)
			}
			else if(arc.target instanceof End){
				(arc.target as End).eval(context)
			}
		}
	}
}