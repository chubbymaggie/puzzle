package flowchartsemantics

/**
 * A language for Flowcharts 
 */
language Flowcharts {
	
	syntax "platform:/resource/puzzle.examples.overlap.flowchart.metamodel/models/flowchart.ecore"
	
	with flowchartpck.FlowchartAspect 
	with flowchartpck.NodeAspect
	with flowchartpck.ArcAspect
	with flowchartpck.ActionAspect
	with flowchartpck.StartAspect
	with flowchartpck.EndAspect
	with flowchartpck.DecisionAspect
	with flowchartpck.ExpressionAspect
	with flowchartpck.LiteralAspect
	with flowchartpck.IntegerLitAspect
	with flowchartpck.StringLitAspect
	with flowchartpck.BoolLitAspect
	with flowchartpck.ArithmeticExpressionAspect
	with flowchartpck.RelationalExpressionAspect
	with flowchartpck.ConstraintAspect
	with flowchartpck.RelationalConstraintAspect
	with flowchartpck.StatementAspect
	with flowchartpck.ProgramAspect
	with flowchartpck.VarDeclAspect
	with flowchartpck.ConditionalAspect
	with flowchartpck.LoopAspect
	with flowchartpck.PrintlnAspect
	with flowchartpck.PrintAspect
	with flowchartpck.AssignationAspect
	with flowchartpck.WaitAspect
	
	exactType FlowchartMT
}

@Main
transformation main(){
	val model = Flowcharts.load("models/Simple.xmi")
}