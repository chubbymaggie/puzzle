package logo

import fr.inria.diverse.k3.al.annotationprocessor.Aspect

import kmLogo.Instruction
import kmLogo.Primitive
import fr.inria.diverse.k3.al.annotationprocessor.OverrideAspectMethod
import kmLogo.Back

import static extension logo.InstructionAspect.*
import static extension logo.BlockAspect.*
import static extension logo.ExpressionAspect.*
import static extension logo.ParameterAspect.*

import kmLogo.Forward
import kmLogo.Left
import kmLogo.Right
import kmLogo.PenDown
import kmLogo.PenUp
import kmLogo.Clear
import kmLogo.Expression
import kmLogo.ProcCall
import java.util.Hashtable
import kmLogo.Block
import kmLogo.ControlStructure
import kmLogo.If
import kmLogo.Repeat
import kmLogo.While
import kmLogo.Parameter
import kmLogo.ParameterCall
import kmLogo.LogoProgram
import kmLogo.Literal
import kmLogo.IntegerLit
import kmLogo.BoolLit
import kmLogo.StringLit
import kmLogo.ArithmeticExpression
import kmLogo.ArithmeticOperator
import kmLogo.RelationalExpression
import kmLogo.RelationalOperator

// *.*
// ASPECT
 @Aspect(className=Instruction) 
class InstructionAspect {
 
	def public int eval (Context context ) {
		return 0
	}  
}