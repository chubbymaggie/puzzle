package rhapsody;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import java.util.ArrayList;

/**
 * StateMachineAspect: Aspects for the State Machine meta-class
 * Serves as the interpreter of the state machine (the controller of the )
 */
/* @Aspect(className = /* name is null */) */@SuppressWarnings("all")
public class StateMachineAspect {
  public String chain;
  
  public ArrayList<ArrayList<String>> events;
  
  /**
   * Evaluates the input and sequentially executes the steps in the state machine.
   */
  public void evalStateMachine() {
    throw new Error("Unresolved compilation problems:"
      + "\nAbstractState cannot be resolved to a type."
      + "\nAbstractState cannot be resolved to a type."
      + "\nThe method or field _self is undefined for the type StateMachineAspect"
      + "\nThe method initRegion is undefined for the type StateMachineAspect"
      + "\nThe method name is undefined for the type StateMachineAspect"
      + "\nThe method or field _self is undefined for the type StateMachineAspect"
      + "\nThe method step is undefined for the type StateMachineAspect"
      + "\nThe method name is undefined for the type StateMachineAspect"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nregions cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nregions cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\n+ cannot be resolved");
  }
}
