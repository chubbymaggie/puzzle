package puzzle.empirical.study;

import org.junit.Test;

public class OverlappingSize {

	@Test
	public void question2() throws Exception{
		ConceptComparison conceptComparisonOperator = new DeepConceptComparison();

		SyntacticNamingVennDiagram metrics = new SyntacticNamingVennDiagram();
		int[][] theMatrix = metrics.getCommonalitiesMatrix(languages, conceptComparisonOperator);
		
		ArrayList<Double> mmaverages = new ArrayList<Double>();
		
		for (int i = 0; i < theMatrix.length; i++) {
			int sum = 0;
			int count = 0;
			for (int j = 0; j < theMatrix[0].length; j++) {
				if(theMatrix[i][j] > 0){
					sum += theMatrix[i][j];
					count ++;
				}
			}
			
			if(count != 0){
				double avg = ((double)sum)/((double)count);
				mmaverages.add(avg);
//				System.out.println("adding average: " + avg);
			}
		}
		
		double sumAVG = 0;
		for (Double _double : mmaverages) {
			sumAVG += _double;
		}
		
		double AVG = sumAVG/((double)mmaverages.size());
		System.out.println("AVG: " + AVG);
		
	}	
}
