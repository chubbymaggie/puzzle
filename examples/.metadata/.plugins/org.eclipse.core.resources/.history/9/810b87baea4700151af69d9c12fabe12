package family.rhapsodymt;

import fr.inria.diverse.melange.lib.IFactory;

@SuppressWarnings("all")
public interface RhapsodyMTFactory extends IFactory {
  public abstract family.rhapsodymt.StateMachine createStateMachine();
  
  public abstract family.rhapsodymt.Region createRegion();
  
  public abstract family.rhapsodymt.State createState();
  
  public abstract family.rhapsodymt.Transition createTransition();
  
  public abstract family.rhapsodymt.NamedElement createNamedElement();
  
  public abstract family.rhapsodymt.Trigger createTrigger();
  
  public abstract family.rhapsodymt.Pseudostate createPseudostate();
  
  public abstract family.rhapsodymt.FinalState createFinalState();
  
  public abstract family.rhapsodymt.RelationalConstraint createRelationalConstraint();
  
  public abstract family.rhapsodymt.Program createProgram();
  
  public abstract family.rhapsodymt.Conditional createConditional();
  
  public abstract family.rhapsodymt.Loop createLoop();
  
  public abstract family.rhapsodymt.VarDecl createVarDecl();
  
  public abstract family.rhapsodymt.IntegerLit createIntegerLit();
  
  public abstract family.rhapsodymt.StringLit createStringLit();
  
  public abstract family.rhapsodymt.BoolLit createBoolLit();
  
  public abstract family.rhapsodymt.ArithmeticExpression createArithmeticExpression();
  
  public abstract family.rhapsodymt.RelationalExpression createRelationalExpression();
  
  public abstract family.rhapsodymt.VarReference createVarReference();
  
  public abstract family.rhapsodymt.ConsoleOutput createConsoleOutput();
  
  public abstract family.rhapsodymt.Println createPrintln();
  
  public abstract family.rhapsodymt.Print createPrint();
  
  public abstract family.rhapsodymt.Assignation createAssignation();
  
  public abstract family.rhapsodymt.Wait createWait();
}
