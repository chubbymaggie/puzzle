<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="kmLogo" nsURI="http://www.kermeta.org/kmLogo" nsPrefix="kmlogo">
  <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="int"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
  <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
  <eClassifiers xsi:type="ecore:EClass" name="Instruction" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="Primitive" abstract="true" eSuperTypes="//Instruction"/>
  <eClassifiers xsi:type="ecore:EClass" name="Back" eSuperTypes="//Primitive">
    <eStructuralFeatures xsi:type="ecore:EReference" name="steps" lowerBound="1" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Forward" eSuperTypes="//Primitive">
    <eStructuralFeatures xsi:type="ecore:EReference" name="steps" lowerBound="1" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Left" eSuperTypes="//Primitive">
    <eStructuralFeatures xsi:type="ecore:EReference" name="angle" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Right" eSuperTypes="//Primitive">
    <eStructuralFeatures xsi:type="ecore:EReference" name="angle" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PenDown" eSuperTypes="//Primitive"/>
  <eClassifiers xsi:type="ecore:EClass" name="PenUp" eSuperTypes="//Primitive"/>
  <eClassifiers xsi:type="ecore:EClass" name="Clear" eSuperTypes="//Primitive"/>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true" eSuperTypes="//Instruction"/>
  <eClassifiers xsi:type="ecore:EClass" name="Literal"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerLit">
    <eSuperTypes href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Literal"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value">
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringLit">
    <eSuperTypes href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Literal"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value">
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BoolLit">
    <eSuperTypes href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Literal"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value">
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryExp" abstract="true" eSuperTypes="//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" lowerBound="1" eType="//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" lowerBound="1" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProcCall" eSuperTypes="//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="actualArgs" upperBound="-1" eType="//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="declaration" lowerBound="1" eType="//ProcDeclaration" eOpposite="//ProcDeclaration/procCall"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProcDeclaration" eSuperTypes="//Instruction">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="args" upperBound="-1" eType="//Parameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="procCall" upperBound="-1" eType="//ProcCall" eOpposite="//ProcCall/declaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instructions" upperBound="-1" eType="//Instruction" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="//Instruction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instructions" upperBound="-1" eType="//Instruction" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="If" eSuperTypes="//ControlStructure">
    <eStructuralFeatures xsi:type="ecore:EReference" name="thenPart" lowerBound="1" eType="//Block" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elsePart" eType="//Block" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ControlStructure" eSuperTypes="//Instruction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Repeat" eSuperTypes="//ControlStructure">
    <eStructuralFeatures xsi:type="ecore:EReference" name="block" lowerBound="1" eType="//Block" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="While" eSuperTypes="//ControlStructure">
    <eStructuralFeatures xsi:type="ecore:EReference" name="block" lowerBound="1" eType="//Block" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterCall" eSuperTypes="//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" lowerBound="1" eType="//Parameter"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ArithmeticExpression">
    <eSuperTypes href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" containment="true">
      <eType xsi:type="ecore:EClass" href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1" containment="true">
      <eType xsi:type="ecore:EClass" href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="//ArithmeticOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ArithmeticOperator">
    <eLiterals name="plus"/>
    <eLiterals name="minus" value="1"/>
    <eLiterals name="mult" value="2"/>
    <eLiterals name="div" value="3" literal=""/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalExpression">
    <eSuperTypes href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="//RelationalOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" containment="true">
      <eType xsi:type="ecore:EClass" href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1" containment="true">
      <eType xsi:type="ecore:EClass" href="../../fr.inria.diverse.sle.examples.tb.flowchart/models/flowchart.ecore#//Expression"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RelationalOperator">
    <eLiterals name="lessThan" literal="lessThan"/>
    <eLiterals name="greaterThan" value="1" literal="greaterThan"/>
    <eLiterals name="equals" value="2" literal="equals"/>
    <eLiterals name="notEqual" value="3" literal="notEqual"/>
    <eLiterals name="lessThanOrEqualTo" value="4" literal="lessThanOrEqualTo"/>
    <eLiterals name="greaterThanOrEqualTo" value="5" literal="greaterThanOrEqualTo"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Plus" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Minus" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Mult" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Div" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Equals" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Greater" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="Lower" eSuperTypes="//BinaryExp"/>
  <eClassifiers xsi:type="ecore:EClass" name="LogoProgram">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instructions" upperBound="-1" eType="//Instruction" containment="true"/>
  </eClassifiers>
</ecore:EPackage>
