package rhapsody;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import fr.inria.diverse.k3.al.annotationprocessor.OverrideAspectMethod;
import java.util.Hashtable;
import rhapsody.ExpressionAspect;

/* @Aspect(className = /* name is null */) */@SuppressWarnings("all")
public class ArithmeticExpressionAspect extends ExpressionAspect {
  @OverrideAspectMethod
  public Object eval(final Hashtable<String, Object> context) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field ArithmeticOperator is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field ArithmeticOperator is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field ArithmeticOperator is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field ArithmeticOperator is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\nThe method or field _self is undefined for the type ArithmeticExpressionAspect"
      + "\noperator cannot be resolved"
      + "\n== cannot be resolved"
      + "\nPLUS cannot be resolved"
      + "\nleft cannot be resolved"
      + "\neval cannot be resolved"
      + "\nright cannot be resolved"
      + "\neval cannot be resolved"
      + "\noperator cannot be resolved"
      + "\n== cannot be resolved"
      + "\nMINUS cannot be resolved"
      + "\nleft cannot be resolved"
      + "\neval cannot be resolved"
      + "\nright cannot be resolved"
      + "\neval cannot be resolved"
      + "\noperator cannot be resolved"
      + "\n== cannot be resolved"
      + "\nMULT cannot be resolved"
      + "\nleft cannot be resolved"
      + "\neval cannot be resolved"
      + "\nright cannot be resolved"
      + "\neval cannot be resolved"
      + "\noperator cannot be resolved"
      + "\n== cannot be resolved"
      + "\nDIV cannot be resolved"
      + "\nleft cannot be resolved"
      + "\neval cannot be resolved"
      + "\nright cannot be resolved"
      + "\neval cannot be resolved");
  }
}
