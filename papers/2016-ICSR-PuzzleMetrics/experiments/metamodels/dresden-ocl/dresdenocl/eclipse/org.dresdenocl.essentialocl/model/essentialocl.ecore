<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmi:version="2.0" name="essentialocl" nsURI="http://www.tu-dresden.de/ocl20/pivot/2007/essentialocl" nsPrefix="essentialocl">
  <eSubpackages name="types" nsURI="http://www.omg.org/2006/essentialocl/types" nsPrefix="types">
    <eClassifiers xsi:type="ecore:EClass" name="BagType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="TupleType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1" eType="#//types/OclLibrary" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The reference to the {@link OclLibrary} facade class is necessary&#13;&#10;for determining type conformance and common super types. This&#13;&#10;implementation uses a dependency injection approach. Whenever&#13;&#10;a &lt;code&gt;TupleType&lt;/code&gt; is created, the reference to the &#13;&#10;&lt;code&gt;OclLibrary&lt;/code&gt; should be set. Note that the old toolkit&#13;&#10;ised a  Singleton approach which is not repeated here to maintain&#13;&#10;clear interfaces.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1" eType="#//types/OclLibrary" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The reference to the {@link OclLibrary} facade class is necessary&#13;&#10;for determining type conformance and common super types. This&#13;&#10;implementation uses a dependency injection approach. Whenever&#13;&#10;a &lt;code&gt;CollectionType&lt;/code&gt; is created, the reference to the &#13;&#10;&lt;code&gt;OclLibrary&lt;/code&gt; should be set. Note that the old toolkit&#13;&#10;used a  Singleton approach which is not repeated here to maintain&#13;&#10;clear interfaces.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" lowerBound="1" eType="#//expressions/CollectionKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;Identifies the kind of this &lt;code&gt;CollectionType&lt;/code&gt;. This is necessary&#13;&#10;to clearly differentiate an instance of &lt;code&gt;CollectionType&lt;/code&gt; from&#13;&#10;instances of its subclasses. This is required when determining type conformance&#13;&#10;of one collection type with another (see the documentation of {@link #conformsTo}).&#13;&#10;Unfortunately, there is no equivalent in Java for the OCL &lt;code&gt;oclIsTypeOf&lt;/code&gt;&#13;&#10;operation. The &lt;code&gt;instanceof&lt;/code&gt; operator cannot be used since it would&#13;&#10;return &lt;code&gt;true&lt;/code&gt; for subclasses as well.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1" eType="#//types/OclLibrary" eOpposite="#//types/OclLibrary/oclInvalid"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OrderedSetType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SequenceType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SetType" eSuperTypes="#//types/CollectionType"/>
    <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" lowerBound="1" eType="#//types/OclLibrary" eOpposite="#//types/OclLibrary/oclVoid"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p&gt;&#13;&#10;The &lt;code&gt;Type&lt;/code&gt; represented by this &lt;code&gt;TypeType&lt;/code&gt;.&#13;&#10;&lt;/p&gt;"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclLibrary">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p&gt;&#13;&#10;The &lt;code&gt;OclLibrary&lt;/code&gt; interface provides access  to the types of the&#13;&#10;OCL Standard Library as defined in the OCL specification, Chapter 11.&#13;&#10;As EMF does not allow to model operations with class scope, the&#13;&#10;&lt;code&gt;OclLibrary&lt;code&gt; also provides a version of the&#13;&#10;{@link #makeTupleType() TupleType::make} operation (with JMI, this method&#13;&#10;would be located inside &lt;code&gt;TupleTypeClass&lt;/code&gt;).&#13;&#10;The OCL Collection types for a particular element type can be retrieved with&#13;&#10;one of the corresponding, type-specific methods.&#13;&#10;&lt;/p&gt;"/>
      </eAnnotations>
      <eOperations name="makeTupleType" eType="#//types/TupleType">
        <eParameters name="atts">
          <eGenericType eClassifier="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Sequence">
            <eTypeArguments eClassifier="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="getCollectionType" eType="#//types/CollectionType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;Returns the {@link CollectionType} with the given element type. The&#13;&#10;given &lt;code&gt;elementType&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt; or&#13;&#10;{@link #getOclInvalid() OclInvalid} (OCL 2.0 specification, Section 8.2.2).&#13;&#10;It may be {@link #getOclVoid() OclVoid}, though.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getSequenceType" eType="#//types/SequenceType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getBagType" eType="#//types/BagType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getSetType" eType="#//types/SetType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getOrderedSetType" eType="#//types/OrderedSetType">
        <eParameters name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eOperations name="getTypeType" lowerBound="1" eType="#//types/TypeType">
        <eParameters name="representedType" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclBoolean" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclString" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclInteger" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclReal" lowerBound="1" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//PrimitiveType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclAny" lowerBound="1" eType="#//types/AnyType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclVoid" lowerBound="1" eType="#//types/VoidType" containment="true" resolveProxies="false" eOpposite="#//types/VoidType/oclLibrary"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclInvalid" lowerBound="1" eType="#//types/InvalidType" containment="true" resolveProxies="false" eOpposite="#//types/InvalidType/oclLibrary"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclType" lowerBound="1" eType="#//types/TypeType" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclCollection" lowerBound="1" eType="#//types/CollectionType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is the prototype for the unlimited number of {@link CollectionType}s.&#13;&#10;Clients should not use this reference, but instead specify the desired&#13;&#10;element type of the collection using {@link #getCollectionType(Type)}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclSequence" lowerBound="1" eType="#//types/SequenceType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is the prototype for the unlimited number of {@link SequenceType}s.&#13;&#10;Clients should not use this reference, but instead specify the desired&#13;&#10;element type of the sequence using {link #getSequenceType(Type)}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclBag" lowerBound="1" eType="#//types/BagType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is the prototype for the unlimited number of {@link BagType}s.&#13;&#10;Clients should not use this reference, but instead specify the desired&#13;&#10;element type of the bag using {link #getBagType(Type)}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclSet" lowerBound="1" eType="#//types/SetType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is the prototype for the unlimited number of {@link SetType}s.&#13;&#10;Clients should not use this reference, but instead specify the desired&#13;&#10;element type of the set using {link #getSetType(Type)}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclOrderedSet" lowerBound="1" eType="#//types/OrderedSetType" containment="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is the prototype for the unlimited number of {@link OrderedSetType}s.&#13;&#10;Clients should not use this reference, but instead specify the desired&#13;&#10;element type of the ordered set using {link #getOrderedSetType(Type)}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclTuple" lowerBound="1" upperBound="-1" eType="#//types/TupleType" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;This is a reference list to {@link TupleType}s that are required to &#13;&#10;define the operations in the OCL Standard Library. Clients should&#13;&#10;not use the types in this list, but instead create their own tuple&#13;&#10;types using {@link #makeTupleType()}.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AnyType" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
  </eSubpackages>
  <eSubpackages name="expressions" nsURI="http://www.omg.org/2006/essentialocl/expressions" nsPrefix="expressions">
    <eClassifiers xsi:type="ecore:EClass" name="VariableExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredVariable" eType="#//expressions/Variable" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Variable" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//NamedElement">
      <eOperations name="asParameter" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The OCL 2.0 specification defines an additional operation that returns a&#13;&#10;corresponding {@link Parameter} for a &lt;code&gt;Variable&lt;/code&gt;.&#13;&#10;&#13;&#10;It is specified as follows:&#13;&#10;&lt;pre&gt;&#13;&#10;context Variable::asParameter() : Parameter&#13;&#10;post: result.name = self.name&#13;&#10;post: result.direction = ParameterDirectionKind::in&#13;&#10;post: result.type = self.type&#13;&#10;&lt;/pre&gt;&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="asProperty" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The OCL 2.0 Specification defines an additional operation that returns a&#13;&#10;corresponding {@link Property} for a &lt;code&gt;Variable&lt;/code&gt;.&#13;&#10;&#13;&#10;It is specified as follows:&#13;&#10;&lt;pre&gt;&#13;&#10;context Variable::asProperty() : Attribute&#13;&#10;post: result.name= self.name&#13;&#10;post: result.type= self.type&#13;&#10;post: result.isMultiple = false&#13;&#10;post: result.isOrdered= true&#13;&#10;post: result.isStatic= false&#13;&#10;&lt;/pre&gt;&#13;&#10;&#13;&#10;Note that the OCL specification adds an additional post condition:&#13;&#10;&#13;&#10;&lt;pre&gt;&#13;&#10;post: result.constraint.specification.bodyExpression = self.initExpression&#13;&#10;&lt;/pre&gt;&#13;&#10;&#13;&#10;However, the meta association between the Pivot Model elements&#13;&#10;{@link Constraint} and {@link ConstrainableElement} is only&#13;&#10;undirectional (in analogy to the specification in Core::Abstractions),&#13;&#10;so we cannot navigate from the property to one of its constraints.&#13;&#10;Also, this constraint is not really required because the&#13;&#10;&lt;code&gt;asProperty()&lt;/code&gt; operation is only used to&#13;&#10;determine the type of {@link TupleLiteralExpression}s. There. &#13;&#10;a conversion from &lt;code&gt;Variable&lt;/code&gt; to&#13;&#10;&lt;code&gt;Property&lt;/code&gt; is needed to make a corresponding&#13;&#10;&lt;code&gt;TupleType&lt;/code&gt;. Thus, setting the name and the&#13;&#10;type of the created &lt;code&gt;Propery&lt;/code&gt; is sufficient.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="representedParameter" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Parameter" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//UnlimitedNatural"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralPart" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="property" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1" eType="#//expressions/TupleLiteralPart" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExp" eSuperTypes="#//expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="realSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Real"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PropertyCallExp" eSuperTypes="#//expressions/FeatureCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredProperty" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Property" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" upperBound="-1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExp" abstract="true" eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExp" eSuperTypes="#//expressions/FeatureCallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredOperation" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Operation" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OclExpression" abstract="true" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//NamedElement">
      <eOperations name="withAtPre" eType="#//expressions/OperationCallExp">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The OCL 2.0 specification defines an additional operation that returns&#13;&#10;an {@link OperationCallExp operation call expression} for the predefined&#13;&#10;&lt;code&gt;atPre()&lt;/code&gt; operation with the self expression as its source.&#13;&#10;&lt;/p&gt;&#13;&#10;&#13;&#10;&lt;p&gt;&#13;&#10;It is specified as follows:&#13;&#10;&#13;&#10;&lt;pre&gt;&#13;&#10;context OclExpression::withAtPre() : OperationCallExp&#13;&#10;post: result.name = 'atPre'&#13;&#10;post: result.argument-&gt;isEmpty()&#13;&#10;post: result.source = self&#13;&#10;&lt;/pre&gt;&#13;&#10;&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="withAsSet" eType="#//expressions/OperationCallExp">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The OCL 2.0 specification defines an additional operation that returns&#13;&#10;an {@link OperationCallExp operation call expression} for the predefined&#13;&#10;&lt;code&gt;asSet()&lt;/code&gt; operation with the self expression as its source.&#13;&#10;&lt;/p&gt;&#13;&#10;&#13;&#10;&lt;p&gt;&#13;&#10;It is specified as follows:&#13;&#10;&#13;&#10;&lt;pre&gt;&#13;&#10;context OclExpression::withAtPre() : OperationCallExp&#13;&#10;post: result.name = 'asSet'&#13;&#10;post: result.argument-&gt;isEmpty()&#13;&#10;post: result.source = self&#13;&#10;&lt;/pre&gt;&#13;&#10;&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="oclLibrary" eType="#//types/OclLibrary" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericLiteralExp" abstract="true" eSuperTypes="#//expressions/PrimitiveLiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="UndefinedLiteralExp" eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="LoopExp" abstract="true" eSuperTypes="#//expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iterator" upperBound="-1" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralExp" abstract="true" eSuperTypes="#//expressions/OclExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="LetExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="in" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IteratorExp" eSuperTypes="#//expressions/LoopExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="IterateExp" eSuperTypes="#//expressions/LoopExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidLiteralExp" eSuperTypes="#//expressions/LiteralExp"/>
    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExp" eSuperTypes="#//expressions/NumericLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IfExp" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FeatureCallExp" abstract="true" eSuperTypes="#//expressions/CallExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="&lt;p&gt;&#13;&#10;The source type of a &lt;code&gt;FeatureCallExp&lt;/code&gt; is only required&#13;&#10;for static feature calls because these do not have an explicit source&#13;&#10;expression as defined by {@link CallExp}.&#13;&#10;&lt;/p&gt;&#13;&#10;&#13;&#10;&lt;p&gt;&#13;&#10;Actually, this attribute is currently only required for the static &lt;code&gt;allInstances&lt;/code&gt;&#13;&#10;operation because its return type &lt;code&gt;Set(T)&lt;/code&gt; depends&#13;&#10;on the type it is called on. For instance, &lt;code&gt;MyClass::allInstances()&lt;/code&gt;&#13;&#10;has the return type &lt;code&gt;Set(MyClass)&lt;/code&gt;. Since the corresponding&#13;&#10;generic operation from the OCL Standard Library needs to be bound to&#13;&#10;the source type, it must be available somewhere in the abstract syntax.&#13;&#10;&lt;/p&gt;"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExp" eSuperTypes="#//expressions/PrimitiveLiteralExp">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanSymbol" eType="ecore:EDataType ../../org.dresdenocl.pivotmodel/model/datatypes.ecore#//Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CallExp" abstract="true" eSuperTypes="#//expressions/OclExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionItem" eSuperTypes="#//expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="item" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CollectionKind">
      <eLiterals name="Collection"/>
      <eLiterals name="Sequence" value="1"/>
      <eLiterals name="Bag" value="2"/>
      <eLiterals name="Set" value="3"/>
      <eLiterals name="OrderedSet" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="part" upperBound="-1" eType="#//expressions/CollectionLiteralPart" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//expressions/CollectionKind"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Type"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPart" abstract="true" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//TypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="CollectionRange" eSuperTypes="#//expressions/CollectionLiteralPart">
      <eStructuralFeatures xsi:type="ecore:EReference" name="first" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="last" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExp" eSuperTypes="#//expressions/LiteralExp">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referredEnumLiteral" eType="ecore:EClass ../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//EnumerationLiteral" resolveProxies="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionInOcl" eSuperTypes="../../org.dresdenocl.pivotmodel/model/pivotmodel.ecore#//Expression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyExpression" lowerBound="1" eType="#//expressions/OclExpression" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="context" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" upperBound="-1" eType="#//expressions/Variable" containment="true" resolveProxies="false"/>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
