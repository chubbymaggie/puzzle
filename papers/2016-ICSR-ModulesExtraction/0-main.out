\BOOKMARK [0][-]{chapter.1}{Identifying Reusable Language Modules from Existing Domain-Specific Languages}{}% 1
\BOOKMARK [1][-]{section.1.1}{Introduction}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Preliminary Definitions}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.2.1}{Domain-Specific Languages in a nutshell}{section.1.2}% 4
\BOOKMARK [3][-]{section*.2}{Specification:}{subsection.1.2.1}% 5
\BOOKMARK [3][-]{section*.3}{Technological space:}{subsection.1.2.1}% 6
\BOOKMARK [3][-]{section*.4}{Implementation:}{subsection.1.2.1}% 7
\BOOKMARK [3][-]{section*.5}{A simple DSL:}{subsection.1.2.1}% 8
\BOOKMARK [2][-]{subsection.1.2.2}{Overlapping in DSLs}{section.1.2}% 9
\BOOKMARK [2][-]{subsection.1.2.3}{Illustrating Scenario}{section.1.2}% 10
\BOOKMARK [1][-]{section.1.3}{Proposed approach}{chapter.1}% 11
\BOOKMARK [2][-]{subsection.1.3.1}{Identifying overlapping}{section.1.3}% 12
\BOOKMARK [3][-]{section*.9}{Comparison operators:}{subsection.1.3.1}% 13
\BOOKMARK [2][-]{subsection.1.3.2}{Extracting reusable language modules}{section.1.3}% 14
\BOOKMARK [3][-]{section*.10}{Breaking down the input set:}{subsection.1.3.2}% 15
\BOOKMARK [3][-]{section*.12}{Encapsulating language modules:}{subsection.1.3.2}% 16
\BOOKMARK [1][-]{section.1.4}{Evaluation}{chapter.1}% 17
\BOOKMARK [2][-]{subsection.1.4.1}{Case study 1: State Machines}{section.1.4}% 18
\BOOKMARK [2][-]{subsection.1.4.2}{Case study 2: Seeking GitHub repositories}{section.1.4}% 19
